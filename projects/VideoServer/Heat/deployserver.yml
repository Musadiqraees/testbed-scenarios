#!/usr/bin/env ansible-playbook



- name: Launch a compute instance
  hosts: localhost
  vars_files: "{{ myvarfile }}"
  remote_user: ubuntu
  gather_facts: True
  vars: 
    count: "{{ numberOfInstances }}"

  tasks:
   - name: create a security group for web servers
     os_security_group:
       name: peertubeSecurityGroup
       state: present
       description: security group for web servers

   - name: allow port 80 for http
     os_security_group_rule:
       security_group: peertubeSecurityGroup
       protocol: tcp
       port_range_min: 80
       port_range_max: 80
       remote_ip_prefix: 0.0.0.0/0

   - name: allow port 443 for https
     os_security_group_rule:
       security_group: peertubeSecurityGroup
       protocol: tcp
       port_range_min: 443
       port_range_max: 443
       remote_ip_prefix: 0.0.0.0/0

   - name: allow port 80 for http
     os_security_group_rule:
       security_group: peertubeSecurityGroup
       protocol: icmp
       remote_ip_prefix: 0.0.0.0/0

   - name: allow port 443 for https
     os_security_group_rule:
       security_group: peertubeSecurityGroup
       protocol: tcp
       port_range_min: 22
       port_range_max: 22
       remote_ip_prefix: 0.0.0.0/0  

   - name: Launch a VMs on {{ current_site }}
     os_server:
        image: "{{ current_image }}"
        name:  "peertube{{current_site}}{{item}}"
        key_name: "{{ key_name }}"
        availability_zone: "{{ availability_zone }}"
        flavor: "{{ current_flavor }}"
        state: present
        wait: yes
        auto_floating_ip: yes
        network: "{{ current_network }}"
        security_groups: default,peertubeSecurityGroup
        meta:
     register: webserver
     with_sequence: 
         count={{ count }}
     ignore_errors: True

   - ini_file:
        dest: ansible-inventory.ini
        section: webservers
        option: "{{ item.server.name }}.cit.local"
        no_extra_spaces: yes
        allow_no_value: yes
     with_items: "{{ webserver.results }}"
     ignore_errors: True

   - ini_file:
         dest: ansible-inventory.ini
         section: IpDNS
         option: "{{ item.server.public_v4 }}" 
         value: "{{ item.server.name }}.cit.local"
         no_extra_spaces: yes
     with_items: "{{ webserver.results }}"
     ignore_errors: True       